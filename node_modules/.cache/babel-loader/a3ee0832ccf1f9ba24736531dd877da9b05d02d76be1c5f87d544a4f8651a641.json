{"ast":null,"code":"var _jsxFileName = \"/Volumes/SSD/ReactJS/FixerExchangeRate/erate/src/Components/ConvertRates.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { FormHelperText } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ConvertRates({\n  Item,\n  fromCurrency,\n  toCurrency,\n  amount,\n  setAmount,\n  setConverted,\n  setDate,\n  symbols,\n  setFromRate,\n  setToRate\n}) {\n  _s();\n  const API_KEY = \"5cca8d2c32284f7a8454b513c6d5320d\"; // ✅ use one key only\n\n  // shared function for fetching rates\n  const fetchRates = async () => {\n    try {\n      const res = await axios.get(`https://api.currencyfreaks.com/v2.0/rates/latest?apikey=${API_KEY}&symbols=${fromCurrency},${toCurrency}`);\n      const rates = res.data.rates;\n      const fromRate = Number(rates[fromCurrency]);\n      const toRate = Number(rates[toCurrency]);\n\n      // update base rates\n      setFromRate(fromRate);\n      setToRate(toRate);\n      setDate(res.data.date);\n\n      // if amount is provided, also calculate conversion\n      if (amount) {\n        const result = toRate / fromRate * amount;\n        setConverted(result);\n      }\n    } catch (error) {\n      if (error.response) {\n        console.error(\"API error:\", error.response.data);\n      } else {\n        console.error(\"Conversion error:\", error.message);\n      }\n    }\n  };\n\n  // fetch rates when currencies change\n  useEffect(() => {\n    if (!fromCurrency || !toCurrency || !symbols) return;\n    fetchRates();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fromCurrency, toCurrency, symbols]);\n\n  // recalc when amount changes\n  useEffect(() => {\n    if (!amount || !fromCurrency || !toCurrency || !symbols) return;\n    fetchRates();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [amount]);\n  return /*#__PURE__*/_jsxDEV(Item, {\n    sx: {\n      p: 2\n    },\n    children: symbols && Object.keys(symbols).length > 0 ? /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      fullWidth: true,\n      sx: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"outlined-adornment-amount\",\n        sx: {\n          color: \"rgba(255, 255, 255, 0.7)\"\n        },\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n        id: \"outlined-adornment-amount\",\n        type: \"number\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        label: \"Amount\",\n        step: \"any\",\n        sx: {\n          backgroundColor: \"transparent\",\n          color: \"white\",\n          input: {\n            color: \"white\"\n          },\n          \".MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"rgba(255, 255, 255, 0.5)\"\n          },\n          \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"white\"\n          },\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#90caf9\"\n          },\n          caretColor: \"white\",\n          input: {\n            color: \"white\",\n            textAlign: \"center\"\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n        sx: {\n          color: \"rgba(255, 255, 255, 0.6)\",\n          textAlign: \"center\",\n          width: \"100%\",\n          display: \"block\",\n          padding: \"8px 0\",\n          fontSize: \"0.875rem\",\n          fontWeight: 500,\n          lineHeight: 1.5,\n          letterSpacing: \"0.02857em\"\n        },\n        children: \"Please enter the amount to convert.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {\n      sx: {\n        color: \"#7affae\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(ConvertRates, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = ConvertRates;\nexport default ConvertRates;\nvar _c;\n$RefreshReg$(_c, \"ConvertRates\");","map":{"version":3,"names":["React","useEffect","axios","InputLabel","FormControl","OutlinedInput","FormHelperText","CircularProgress","jsxDEV","_jsxDEV","ConvertRates","Item","fromCurrency","toCurrency","amount","setAmount","setConverted","setDate","symbols","setFromRate","setToRate","_s","API_KEY","fetchRates","res","get","rates","data","fromRate","Number","toRate","date","result","error","response","console","message","sx","p","children","Object","keys","length","variant","fullWidth","textAlign","htmlFor","color","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","e","target","label","step","backgroundColor","input","borderColor","caretColor","width","display","padding","fontSize","fontWeight","lineHeight","letterSpacing","_c","$RefreshReg$"],"sources":["/Volumes/SSD/ReactJS/FixerExchangeRate/erate/src/Components/ConvertRates.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport { FormHelperText } from \"@mui/material\";\nimport { CircularProgress } from \"@mui/material\";\n\nfunction ConvertRates({\n                          Item,\n                          fromCurrency,\n                          toCurrency,\n                          amount,\n                          setAmount,\n                          setConverted,\n                          setDate,\n                          symbols,\n                          setFromRate,\n                          setToRate,\n                      }) {\n    const API_KEY = \"5cca8d2c32284f7a8454b513c6d5320d\"; // ✅ use one key only\n\n    // shared function for fetching rates\n    const fetchRates = async () => {\n        try {\n            const res = await axios.get(\n                `https://api.currencyfreaks.com/v2.0/rates/latest?apikey=${API_KEY}&symbols=${fromCurrency},${toCurrency}`\n            );\n\n            const rates = res.data.rates;\n            const fromRate = Number(rates[fromCurrency]);\n            const toRate = Number(rates[toCurrency]);\n\n            // update base rates\n            setFromRate(fromRate);\n            setToRate(toRate);\n            setDate(res.data.date);\n\n            // if amount is provided, also calculate conversion\n            if (amount) {\n                const result = (toRate / fromRate) * amount;\n                setConverted(result);\n            }\n        } catch (error) {\n            if (error.response) {\n                console.error(\"API error:\", error.response.data);\n            } else {\n                console.error(\"Conversion error:\", error.message);\n            }\n        }\n    };\n\n    // fetch rates when currencies change\n    useEffect(() => {\n        if (!fromCurrency || !toCurrency || !symbols) return;\n        fetchRates();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [fromCurrency, toCurrency, symbols]);\n\n    // recalc when amount changes\n    useEffect(() => {\n        if (!amount || !fromCurrency || !toCurrency || !symbols) return;\n        fetchRates();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [amount]);\n\n    return (\n        <Item sx={{ p: 2 }}>\n            {symbols && Object.keys(symbols).length > 0 ? (\n                <FormControl variant=\"outlined\" fullWidth sx={{ textAlign: \"center\" }}>\n                    <InputLabel\n                        htmlFor=\"outlined-adornment-amount\"\n                        sx={{ color: \"rgba(255, 255, 255, 0.7)\" }}\n                    >\n                        Amount\n                    </InputLabel>\n                    <OutlinedInput\n                        id=\"outlined-adornment-amount\"\n                        type=\"number\"\n                        value={amount}\n                        onChange={(e) => setAmount(e.target.value)}\n                        label=\"Amount\"\n                        step=\"any\"\n                        sx={{\n                            backgroundColor: \"transparent\",\n                            color: \"white\",\n                            input: { color: \"white\" },\n                            \".MuiOutlinedInput-notchedOutline\": {\n                                borderColor: \"rgba(255, 255, 255, 0.5)\",\n                            },\n                            \"&:hover .MuiOutlinedInput-notchedOutline\": {\n                                borderColor: \"white\",\n                            },\n                            \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n                                borderColor: \"#90caf9\",\n                            },\n                            caretColor: \"white\",\n                            input: {\n                                color: \"white\",\n                                textAlign: \"center\",\n                            },\n                        }}\n                    />\n                    <FormHelperText\n                        sx={{\n                            color: \"rgba(255, 255, 255, 0.6)\",\n                            textAlign: \"center\",\n                            width: \"100%\",\n                            display: \"block\",\n                            padding: \"8px 0\",\n                            fontSize: \"0.875rem\",\n                            fontWeight: 500,\n                            lineHeight: 1.5,\n                            letterSpacing: \"0.02857em\",\n                        }}\n                    >\n                        Please enter the amount to convert.\n                    </FormHelperText>\n                </FormControl>\n            ) : (\n                <CircularProgress sx={{ color: \"#7affae\" }} />\n            )}\n        </Item>\n    );\n}\n\nexport default ConvertRates;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}